package com.vimond.automation.PageObject;

import java.util.List;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;

import com.vimond.automation.Utility.TestUtils;

public class AccountsPageObject {
    private WebDriver driver;
    TestUtils elements;

    public AccountsPageObject(WebDriver driver) {
	this.driver = driver;
	elements = new TestUtils(driver);
    }

    @FindBy(xpath = "//a[contains(text(),'more')]")
    public WebElement MoreMenu;

    /*
     * @FindBy(css = "div.pluggable-module-dropdown > div > a") public List<WebElement> MoreList;
     */

    @FindBy(xpath = "//a[contains(text(),'Accounts')]")
    public WebElement Accounts;

    @FindBy(xpath = "//a[contains(text(),'Profiles')]")
    public WebElement Profiles;

    @FindBy(xpath = "//a[contains(text(),'Insights')]")
    public WebElement Insights;

    @FindBy(css = "button.cms-button.secondary")
    public WebElement AddUsers;

    @FindBy(xpath = "//input[@id='first-name']")
    public WebElement FirstName;

    @FindBy(xpath = "//input[@id='email']")
    public WebElement Email;

    @FindBy(xpath = "//input[@id='last-name']")
    public WebElement LastName;

    @FindBy(xpath = "//input[@id='password']")
    public WebElement Password;

    @FindBy(xpath = "//input[@placeholder='Add more roles...']")
    public WebElement Role;

    @FindBy(xpath = "//div[@class='core-select-option']")
    public List<WebElement> RoleList;

    @FindBy(xpath = "//input[@id='city']")
    public WebElement city;

    @FindBy(css = "div.icon-wrapper > span.core-icon > svg")
    public WebElement contry;

    @FindBy(css = " div.tag-editor > div.core-select > div.input-wrapper > div.icon-wrapper > span.core-icon > svg")
    public WebElement roles;

    @FindBy(css = "button.cms-button.primary")
    public WebElement SaveUser;

    public void clickOnButton(String button) {
	try {
	    Thread.sleep(2000);
	    if (button == "PROFILES") {
		click(Profiles);
	    } else if (button == "INSIGHTS") {
		click(Insights);
	    } else if (button == "ACCOUNTS") {
		click(Accounts);
	    } else if (button == "MORE") {
		click(MoreMenu);
	    } else if (button == "Add Users") {
		click(AddUsers);
	    }
	} catch (InterruptedException e) {
	    e.printStackTrace();
	}
    }

    public void click(WebElement button) {
	System.out.println("Clicking on Edit  button");
	elements.waitForElementFluently(button, 10);
	button.click();
    }

    public void enterValue(WebElement button, String input) {
	System.out.println("entering values in input fields");
	elements.waitForElementFluently(button, 10);
	button.sendKeys(input);
    }

    public void SelectRole() {
	System.out.println("Selecting role for user");
	elements.waitForElementFluently(Role, 10);
	Role.click();

    }

    public String getValue(WebElement element) {
	System.out.println("fetching entered value");
	elements.waitForElementFluently(element, 10);
	return element.getAttribute("value");

    }

    @FindBy(css = "input")
    public WebElement accountSearch;

    @FindBy(css = "div.user-renderer")
    public List<WebElement> accountSearchResultList;

    @FindBy(css = "div.user-renderer>div:nth-of-type(2)>span:nth-of-type(3)")
    public List<WebElement> accountSearchResultList_role;

    /*
     * @FindBy(css = "div.core-infinite-scroll.cms-sidebar-list") public List<WebElement> ChannelList;
     */

    /*
     * @FindBy(css = "div.core-infinite-scroll.cms-sidebar-list>div") public List<WebElement> ChannelListItem;
     */

    /*
     * //first channel tirle
     * 
     * @FindBy(css = "div.core-infinite-scroll.cms-sidebar-list>div>div>div:nth-of-type(2)>span") public List<WebElement>
     * ChannelTitle_First;
     */

    @FindBy(css = "div.user-info>div:nth-of-type(2)>div.columns>div>div:nth-of-type(3)>div>input")
    public WebElement UserEmail;

    @FindBy(css = "div.save-container>button:nth-of-type(2)")
    public WebElement SaveBTN;

    public String getUserEmail(WebElement element) {
	System.out.println("fetching email value");
	elements.waitForElementFluently(element, 10);
	return element.getAttribute("value");

    }

    @FindBy(css = "div.user-info>div:nth-of-type(2)>div.columns>div>div:nth-of-type(3)>div>input")
    public WebElement User_Role;
}
